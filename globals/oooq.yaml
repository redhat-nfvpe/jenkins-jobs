- job-template:
    name: 'oooq-{release}-deploy-{partner}'
    node: '{partner}'

    scm:
      - clone-oooq
      - clone-collect-logs
    builders:
      - cleanup-environment
      - oooq-clear-colors
      - oooq-install-deps
      - oooq-export-vars
      - oooq-deploy:
          working-dir: "/home/stack/quickstart"
          requirements: "${{WORKSPACE}}/config/requirements/toad-requirements.txt"
          config: "./config/general_config/minimal.yml"
          release: "{release}"
          playbook: "quickstart-extras.yml"
          extras: ""
      - collect-ara-results
      - collect-logs
      - collect-exit-code
    wrappers:
      - copy-to-slave:
          includes:
            - '**/config/**'
          relative-to: 'userContent'
      - build-timeout:
          timeout: 180
      - timestamps
      - workspace-cleanup

    publishers:
      - publish-to-static:
          publish_target: 'oooq_{release}_deploy_{partner}_logs/${{BUILD_ID}}'

- job-template:
    name: 'oooq-validate-{partner}'
    node: '{partner}'

    scm:
      - clone-oooq
      - clone-collect-logs
    builders:
      - oooq-clear-colors
      - oooq-export-vars
      - shell: |
          socketdir=$(mktemp -d /tmp/sockXXXXXX)
          # copy ansible inventory from previous deploy
          cp /home/stack/quickstart/hosts ${{WORKSPACE}}/
      - inject:
          properties-content: |
            ANSIBLE_SSH_CONTROL_PATH=$socketdir/%%h-%%r
            SSH_CONFIG=/home/stack/quickstart/ssh.config.ansible
            ANSIBLE_SSH_ARGS="-F ${{SSH_CONFIG}}"
      - oooq-validate:
          working-dir: "$WORKSPACE"
          requirements: "$WORKSPACE/config/requirements/toad-requirements.txt"
          playbook: "tempest.yml"
          extras: "--extra-vars tempest_source=rdo --extra-vars tempest_format=venv --extra-vars run_tempest=true"
      - collect-ara-results
      - collect-logs
      - collect-exit-code
    wrappers:
      - copy-to-slave:
          includes:
            - '**/config/**'
          relative-to: 'userContent'
      - build-timeout:
          timeout: 180
      - timestamps

    publishers:
      - publish-to-static:
          publish_target: 'oooq_validate_{partner}_logs/${{BUILD_ID}}'

    triggers:
      - reverse:
          jobs:
            - 'oooq-liberty-deploy-{partner}'
            - 'oooq-mitaka-deploy-{partner}'
            - 'oooq-newton-deploy-{partner}'
            - 'oooq-ocata-deploy-{partner}'
            - 'oooq-pike-deploy-{partner}'
            - 'oooq-master-deploy-{partner}'
        result: 'success'

- job-template:
    name: 'test-browbeat'
    node: '{partner}'

    scm:
      - clone-browbeat

    builders:
      - install-browbeat

    triggers:
      - reverse:
          jobs:
            - 'oooq-validate-{partner}'
        result: 'success'

    wrappers:
      - copy-to-slave:
          includes:
            - '**/config/**'
          relative-to: 'userContent'
      - build-timeout:
          timeout: 180
      - timestamps
      - workspace-cleanup

- job-template:
    name: 'oooq-{release}-image-downloader'
    node: '{partner}'

    triggers:
      - pollurl:
          cron: 'H/60 * * * *'
          polling-node: '{partner}'
          urls:
          - url: 'https://images.rdoproject.org/{release}/delorean/consistent/stable/delorean_hash.txt'
            proxy: false
            check-date: true

    builders:
      - download-oooq-images:
          release_version: "{release}"

- job-template:
    name: 'oooq-{release}-{distro}-osp_deploy-{partner}'
    node: '{partner}'

    scm:
      - clone-oooq
      - clone-collect-logs
    builders:
      - cleanup-environment
      - oooq-export-vars
      - oooq-install-deps
      - shell: |
          mkdir -p /home/stack/quickstart/config/release
          cp ./config/deploy/{distro}_{partner}.yml /home/stack/quickstart/config/release/{release}.yml
      - oooq-deploy:
          working-dir: "/home/stack/quickstart"
          requirements: "${{WORKSPACE}}/config/requirements/toad-requirements.txt"
          config: "./config/general_config/minimal.yml"
          release: "{release}"
          playbook: "quickstart-extras.yml"
          extras: ""
      - collect-ara-results
      - collect-logs
      - collect-exit-code
    wrappers:
      - copy-to-slave:
          includes:
            - '**/config/**'
          relative-to: 'userContent'
      - build-timeout:
          timeout: 180
      - timestamps
      - workspace-cleanup

    publishers:
      - publish-to-static:
          publish_target: 'oooq_{release}_{distro}_osp_deploy_{partner}_logs/${{BUILD_ID}}'

- job-template:
    name: 'oooq-{release}-{distro}-build-{partner}'
    node: '{partner}'

    scm:
      - clone-oooq

    builders:
      - cleanup-environment
      - oooq-clear-colors
      - oooq-install-deps
      - oooq-export-vars
      - oooq-image-build:
          working-dir: "/home/stack/quickstart"
          config: "./config/general_config/minimal.yml"
          playbook: "build-images.yml"
          release: "{release}"
          extras: "-e @../config/build/{distro}_{partner}.yml"
      - shell: |
          sudo rm -rf /home/stack/images/{distro}/
          sudo mkdir -p /home/stack/images/{distro}/
          sudo chown stack:stack /home/stack/images/{distro}/
          sudo mv ${{WORKSPACE}}/oooq-images/*.log ${{WORKSPACE}}/
          cp -R ${{WORKSPACE}}/oooq-images/* /home/stack/images/{distro}/
      - collect-ara-results
      - collect-exit-code
    wrappers:
      - copy-to-slave:
          includes:
            - '**/config/**'
          relative-to: 'userContent'
      - build-timeout:
          timeout: 180
      - timestamps
      - workspace-cleanup
    publishers:
      - publish-to-static:
          publish_target: 'oooq_{release}_{distro}_build_{partner}_logs/${{BUILD_ID}}'

- job-template:
    name: 'oooq-{release}-deploy-baremetal-{partner}-{hwenv}'
    node: '{partner}-{hwenv}'

    scm:
      - clone-oooq
      - clone-collect-logs
    builders:
      - cleanup-environment
      - oooq-clear-colors
      - oooq-install-deps
      - oooq-export-vars
      - oooq-deploy:
          working-dir: "/home/stack/quickstart"
          requirements: "${{WORKSPACE}}/config/requirements/toad-requirements.txt"
          config: "./config/general_config/minimal.yml"
          release: "{release}"
          playbook: "baremetal-full-deploy.yml"
          extras: "--config ${{WORKSPACE}}/toad_envs/{hwenv}/deploy_config.yml --extra-vars @${{WORKSPACE}}/toad_envs/{hwenv}/env_settings.yml"
      - collect-ara-results
      - collect-logs
      - collect-exit-code
    wrappers:
      - copy-to-slave:
          includes:
            - '**/config/**,**/toad_envs/**'
          relative-to: 'userContent'
      - build-timeout:
          timeout: 180
      - timestamps
      - workspace-cleanup

    publishers:
      - publish-to-static:
          publish_target: 'oooq_{release}_deploy_baremetal_{partner}_{hwenv}_logs/${{BUILD_ID}}'

- job-template:
    name: 'oooq-{release}-{distro}-osp_deploy-baremetal-{partner}-{hwenv}'
    node: '{partner}-{hwenv}'

    scm:
      - clone-oooq
      - clone-collect-logs
    builders:
      - cleanup-environment
      - oooq-export-vars
      - oooq-install-deps
      - shell: |
          mkdir -p /home/stack/quickstart/config/release
          cp ./config/deploy/{distro}_{partner}.yml /home/stack/quickstart/config/release/{release}.yml
      - oooq-deploy:
          working-dir: "/home/stack/quickstart"
          requirements: "${{WORKSPACE}}/config/requirements/toad-requirements.txt"
          config: "./config/general_config/minimal.yml"
          release: "{release}"
          playbook: "baremetal-full-deploy.yml"
          extras: "--config ${{WORKSPACE}}/toad_envs/{hwenv}/deploy_config.yml --extra-vars @${{WORKSPACE}}/toad_envs/{hwenv}/env_settings.yml"
      - collect-ara-results
      - collect-logs
      - collect-exit-code
    wrappers:
      - copy-to-slave:
          includes:
            - '**/config/**,**/toad_envs/**'
          relative-to: 'userContent'
      - build-timeout:
          timeout: 180
      - timestamps
      - workspace-cleanup

    publishers:
      - publish-to-static:
          publish_target: 'oooq_{release}_{distro}_osp_deploy_baremetal_{partner}_{hwenv}_logs/${{BUILD_ID}}'

